apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kerberus-dashboard.fullname" . }}-frontend

spec:
  replicas: {{ .Values.frontend.replicaCount }}

  selector:
    matchLabels:
      app: kerberus-dashboard
      component: frontend

  template:
    metadata:
      annotations:
        ad.datadoghq.com/kerberus-dashboard.logs: '[{"source":"kerberus-dashboard","service":"frontend"}]'
      labels:
        app: kerberus-dashboard
        component: frontend

    spec:
      {{- if .Values.dockerRegistrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecretName }}
      {{- end}}
      containers:
        - name: {{ .Chart.Name }}-frontend
          image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.frontend.containerPort }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "kerberus-dashboard.fullname" . }}-app-env
          volumeMounts:
            - name: app-config
              mountPath: {{ printf "/app/%s" (include "kerberus-dashboard.appConfigFilename" .) }}
              subPath: {{ include "kerberus-dashboard.appConfigFilename" . }}
      volumes:
        - name: app-config
          configMap:
            name: {{ include "kerberus-dashboard.fullname" . }}-app-config
      {{- if .Values.global.nodeSelector }}
      nodeSelector: {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
{{- if .Values.frontend.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "frontend.serviceName" . }}

spec:
  ports:
    - port: 80
      targetPort: {{ .Values.frontend.containerPort }}

  selector:
    app: kerberus-dashboard
    component: frontend

  type: ClusterIP
{{- end }}
