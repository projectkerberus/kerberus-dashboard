{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "TemplateV1alpha1",
  "description": "A Template describes a skeleton for use with the Scaffolder. It is used for describing what templating library is supported, and also for documenting the variables that the template requires using JSON Forms Schema.",
  "examples": [
    {
      "apiVersion": "backstage.io/v1alpha1",
      "kind": "Template",
      "metadata": {
        "name": "react-ssr-template",
        "title": "React SSR Template",
        "description": "Next.js application skeleton for creating isomorphic web applications.",
        "tags": ["recommended", "react"]
      },
      "spec": {
        "owner": "artist-relations-team",
        "templater": "cookiecutter",
        "type": "website",
        "path": ".",
        "schema": {
          "required": ["component-id", "description"],
          "properties": {
            "component_id": {
              "title": "Name",
              "type": "string",
              "description": "Unique name of the component"
            },
            "description": {
              "title": "Description",
              "type": "string",
              "description": "Description of the component"
            }
          }
        }
      }
    }
  ],
  "allOf": [
    {
      "$ref": "Entity"
    },
    {
      "type": "object",
      "required": ["spec"],
      "properties": {
        "apiVersion": {
          "enum": ["backstage.io/v1alpha1", "backstage.io/v1beta1"]
        },
        "kind": {
          "enum": ["Template"]
        },
        "metadata": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The nice display name for the template. This field is required as is used to reference the template to the user instead of the metadata.name field.",
              "examples": ["React SSR Template"],
              "minLength": 1
            }
          }
        },
        "spec": {
          "type": "object",
          "required": ["type", "templater", "schema"],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of component created by the template. The software catalog accepts any type value, but an organization should take great care to establish a proper taxonomy for these. Tools including Backstage itself may read this field and behave differently depending on its value. For example, a website type component may present tooling in the Backstage interface that is specific to just websites.",
              "examples": ["service", "website", "library"],
              "minLength": 1
            },
            "templater": {
              "type": "string",
              "description": "The templating library that is supported by the template skeleton.",
              "examples": ["cookiecutter"],
              "minLength": 1
            },
            "path": {
              "type": "string",
              "description": "The string location where the templater should be run if it is not on the same level as the template.yaml definition.",
              "examples": ["./cookiecutter/skeleton"],
              "minLength": 1
            },
            "schema": {
              "type": "object",
              "description": "The JSONSchema describing the inputs for the template."
            },
            "owner": {
              "type": "string",
              "description": "The user (or group) owner of the template",
              "minLength": 1
            }
          }
        }
      }
    }
  ]
}
